version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: perfmaster-db
    environment:
      POSTGRES_DB: perfmaster
      POSTGRES_USER: perfmaster
      POSTGRES_PASSWORD: perfmaster_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - perfmaster-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U perfmaster -d perfmaster"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: perfmaster-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - perfmaster-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: perfmaster-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://perfmaster:perfmaster_password@postgres:5432/perfmaster
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-secret-key-here
      - NEXTAUTH_URL=http://localhost:3000
      - GROQ_API_KEY=${GROQ_API_KEY}
      - FAL_KEY=${FAL_KEY}
      - DEEPINFRA_API_KEY=${DEEPINFRA_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - perfmaster-network
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: perfmaster-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
    networks:
      - perfmaster-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  perfmaster-network:
    driver: bridge
